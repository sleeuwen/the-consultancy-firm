@using System.Text.RegularExpressions
@model PaginatedList<Newsletter>

@{
    ViewData["Title"] = "Nieuwsbrief";
    var pagination = new PaginationProperties
    {
        PageIndex = Model.PageIndex,
        TotalPages = Model.TotalPages,
        HasNextPage = Model.HasNextPage,
        HasPreviousPage = Model.HasPreviousPage
    };
}

<h2>@ViewBag.Title</h2>

<div class="dashboard-buttons mb-3">
    <a asp-action="Create" class="dashboard-button" id="create-item">
        Nieuwe nieuwsbrief Toevoegen
        <i class="icon-badge fa fa-plus"></i>
    </a>
    <a asp-action="Subscriptions" class="dashboard-button" id="create-item">
        Bekijk aanmeldingen
        <i class="icon-badge fa fa-address-book"></i>
    </a>
</div>
<form asp-action="Index" method="get">
    <div class="row mb-3 mt-3">
        <div class="col-4">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search" id="txtSearch" name="SearchString" value="@ViewData["currentFilter"]" />
                <div class="input-group-append">
                    <button class="btn btn-secondary" type="submit">
                        <span class="fa fa-search"></span>
                    </button>
                </div>
            </div>
        </div>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["SubjectSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-showDisabled="@ViewBag.ShowDisabled">Subject</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => new Newsletter().NewsletterIntroText)
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-showDisabled="@ViewBag.ShowDisabled">Sent at</a>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            var newlineIdx = item.NewsletterIntroText?.IndexOfAny(new[] { '\r', '\n' }) ?? -1;
            var title = item.NewsletterIntroText?.Substring(0, newlineIdx < 0 ? item.NewsletterIntroText.Length : newlineIdx);
            title = Regex.Replace(title ?? "", "<[^>]*>", "");
            title = Regex.Replace(title, "<p>", "");
            title = title.Length > 35 ? title.Substring(0, 100) + "..." : title;

            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Subject)
                </td>
                <td>
                    @title
                </td>
                <td>
                    <time  datetime="@item.SentAt.ToString("yyyy-MM-dd'T'HH:mm:ssZ")">@item.SentAt</time>
                </td>
            </tr>
        }
    </tbody>
</table>
@Html.Partial("PaginationPartial", pagination)
