@model Download

@{
    ViewData["Title"] = "Edit";
}
<h2>Edit</h2>

<h4>Downloads</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="invalid-feedback d-block"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="invalid-feedback d-block"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control"></textarea>
                <span asp-validation-for="Description" class="invalid-feedback d-block"></span>
            </div>
            <div class="form-group">
                <input asp-for="LinkPath" type="hidden" />
                <input asp-for="Date" type="hidden" />
                <label asp-for="File" class="control-label"></label><br>
                <p>Current</p>
                <a href="@Model.LinkPath" download>
                    @Html.DisplayFor(modelItem => Model.Filename)
                </a>
                <input asp-for="File" class="form-control" />
                <span asp-validation-for="File" class="invalid-feedback d-block"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
