@model Case

@{
    ViewData["Title"] = Model?.Title + " - Aanpassen";
}

<h2>@ViewBag.Title</h2>

<div class="d-flex align-items-baseline">
    <h4>Case</h4>
    <small class="text-muted ml-2">
        <a asp-area="" asp-controller="Cases" asp-action="Details" asp-route-id="@Model.Id" target="_blank" title="Opent in een nieuw tabblad">
            Bekijk op de website
        </a>
    </small>
</div>
<hr />

<div class="container-fluid px-0">
    <form asp-action="Edit" class="blocks-form" id="updateCase">
        <div class="row">
            <div class="col-md-4">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Title" class="control-label"></label>
                    <input asp-for="Title" class="form-control" placeholder="Titel"/>
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="CustomerId" class="control-label"></label>
                    <select asp-for="CustomerId" class="form-control" asp-items="ViewBag.Customers">
                    </select>
                    <span asp-validation-for="CustomerId" class="invalid-feedback d-block"></span>
                    @if (ViewBag.Customers.Count == 0) {
                        <small id="customerHelp" class="form-text text-muted">
                            Er zijn nog geen klanten toegevoegd, klik
                            <a asp-controller="Customers" asp-action="Create">hier</a>
                            om een nieuwe klant toe te voegen.
                        </small>
                    }
                    else
                    {
                        <small id="customerHelp" class="form-text text-muted">
                            Zit de juiste klant er niet bij? Klik dan
                            <a asp-controller="Customers" asp-action="Create">hier</a>
                            om een nieuwe klant toe te voegen.
                        </small>
                    }
                </div>
            </div>
        </div>
    </form>

    <label>Content</label>
    <div id="blocksList">
        @foreach (var block in Model.Blocks.OrderBy(b => b.Order))
        {
            @await Component.InvokeAsync("Block", block)
        }
    </div>

    <div class="row mt-3">
        <div class="col-12">
            <button class="btn btn-default" data-toggle="modal" data-target="#chooseBlockModal" type="button">Voeg item toe</button>
        </div>
    </div>
</div>

<div class="savebar">
    <div class="container-fluid">
        <div class="row align-items-center">
            <div class="col-md-6">
                <a asp-action="Index">Terug naar de lijst</a>
            </div>
            <div class="col-md-6 d-flex justify-content-end align-items-center">
                <small class="text-muted mr-3" id="statusText"></small>
                <input type="submit" value="Opslaan" class="btn btn-default" data-blocks-submit="#updateCase"/>
            </div>
        </div>
    </div>
</div>

@Html.Partial("BlockChoiceModalPartial")

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
